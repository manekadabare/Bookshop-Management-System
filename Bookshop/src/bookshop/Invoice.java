/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package bookshop;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author SHEHAN
 */
public class Invoice extends javax.swing.JFrame {
    double avbqty;
    /**
     * Creates new form Invoice
     */
    public Invoice() {
        initComponents();
        getInvoiceID();
        barcode.grabFocus();
        loadItem();
        jDialog1.setLocationRelativeTo(null);
        jDialog2.setLocationRelativeTo(null);
        setDateAndTime();
    }

    Invoice(String text) {
        this();
        try {
            name2.setText(text);
            ResultSet rs = MyDB.search("select type from login where username='" + text + "'");
            if (rs.next()) {
                type.setText(rs.getString("type"));
            }
        } catch (Exception e) {
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jDialog1 = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        name1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        price1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        refresh = new javax.swing.JButton();
        jDialog2 = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        invoiceid = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        itemid = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        batchid = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        barcode = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        qty = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        status = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        itemdiscount = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        subtotal = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        invoicediscount = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        nettotal = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        payment = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        balance = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        home = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        type = new javax.swing.JLabel();
        type1 = new javax.swing.JLabel();
        name2 = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        time = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();

        jDialog1.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialog1.setTitle("Search");
        jDialog1.setMinimumSize(new java.awt.Dimension(850, 350));

        jPanel1.setMinimumSize(new java.awt.Dimension(859, 350));

        jLabel16.setText("Name");

        name1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                name1KeyReleased(evt);
            }
        });

        jLabel17.setText("Price");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Batch ID", "Barcode", "Name", "Unit Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh.png"))); // NOI18N
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 758, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel17)
                        .addGap(44, 44, 44)
                        .addComponent(price1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(138, 138, 138)
                        .addComponent(jLabel16)
                        .addGap(47, 47, 47)
                        .addComponent(name1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refresh)))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(price1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(name1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refresh))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jDialog2.setMinimumSize(new java.awt.Dimension(850, 350));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Batch ID", "Barcode", "Name", "Unit Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 758, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Invoice ID");

        invoiceid.setEditable(false);

        jLabel3.setText("Item ID");

        itemid.setEditable(false);

        jLabel4.setText("Batch ID ");

        batchid.setEditable(false);

        jLabel5.setText("Barcode");

        barcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barcodeActionPerformed(evt);
            }
        });
        barcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                barcodeKeyReleased(evt);
            }
        });

        jLabel6.setText("Name");

        jLabel7.setText("Unit Price ");

        jLabel8.setText("Quantity");

        qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyActionPerformed(evt);
            }
        });
        qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                qtyKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qtyKeyTyped(evt);
            }
        });

        jLabel9.setText("Status");

        status.setEditable(false);

        jLabel10.setText("Discount");

        itemdiscount.setText("0");
        itemdiscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemdiscountActionPerformed(evt);
            }
        });
        itemdiscount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                itemdiscountKeyTyped(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Batch ID", "Barcode", "Name", "Unit Price", "Quantity", "Discount", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel11.setText("Sub Total");

        jLabel12.setText("Discount");

        invoicediscount.setText("0");
        invoicediscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoicediscountActionPerformed(evt);
            }
        });
        invoicediscount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                invoicediscountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                invoicediscountKeyTyped(evt);
            }
        });

        jLabel13.setText("Net Total");

        nettotal.setEditable(false);

        jLabel14.setText("Payment");

        payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentActionPerformed(evt);
            }
        });

        jLabel15.setText("Balance");

        balance.setEditable(false);
        balance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                balanceActionPerformed(evt);
            }
        });

        search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search-3-xxl.png"))); // NOI18N
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/MB__home.png"))); // NOI18N
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });

        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete-xxl.png"))); // NOI18N
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(34, 34, 34)
                        .addComponent(subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(home))
                .addGap(212, 212, 212)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel14))
                .addGap(66, 66, 66)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(invoicediscount, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(payment, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(241, 241, 241)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel15))
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(balance, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nettotal, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delete)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(28, 28, 28)
                                .addComponent(invoiceid, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57)
                                .addComponent(jLabel5))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(61, 61, 61)
                                .addComponent(jLabel8)
                                .addGap(43, 43, 43)
                                .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(barcode, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(search)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addGap(34, 34, 34)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itemid, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(jLabel9)
                                .addGap(35, 35, 35)
                                .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addGap(47, 47, 47)
                                .addComponent(batchid, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(177, 177, 177))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(jLabel10)
                                .addGap(32, 32, 32)
                                .addComponent(itemdiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(67, Short.MAX_VALUE))))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(invoiceid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(barcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(batchid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(itemid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(search)))
                .addGap(46, 46, 46)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(itemdiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(delete))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(invoicediscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(nettotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(payment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(balance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(home))
                .addGap(125, 125, 125))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jLabel18.setFont(new java.awt.Font("Simplified Arabic", 1, 20)); // NOI18N
        jLabel18.setText("Logged in as :");

        type.setFont(new java.awt.Font("Simplified Arabic", 1, 20)); // NOI18N

        type1.setFont(new java.awt.Font("Simplified Arabic", 1, 20)); // NOI18N
        type1.setText("-");

        name2.setFont(new java.awt.Font("Simplified Arabic", 1, 20)); // NOI18N

        date.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        date.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        date.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        time.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        time.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        time.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel6.setBackground(new java.awt.Color(51, 102, 255));

        jLabel21.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        jLabel21.setText("Invoice");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(580, 580, 580)
                .addComponent(jLabel21)
                .addContainerGap(808, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel21)
                .addGap(0, 1, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(type1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(name2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88))
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(type1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(jPanel3, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void barcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barcodeActionPerformed
        try {
            DefaultTableModel dtm = (DefaultTableModel) jTable3.getModel();
            ResultSet rs = MyDB.search("select * from item inner join batch where item.batchid=batch.batchid and barcode='" + barcode.getText() + "'");
            dtm.setRowCount(0);
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("itemid"));
                v.add(rs.getString(2));
                v.add(rs.getString("barcode"));
                v.add(rs.getString("name"));
                v.add(rs.getString("sprice"));
                dtm.addRow(v);
                jDialog2.setVisible(true);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_barcodeActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        jDialog1.setVisible(true);
    }//GEN-LAST:event_searchActionPerformed

    private void qtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyKeyReleased
        try {
            ResultSet rs = MyDB.search("select * from item where itemid='" + itemid.getText() + "' and batchid='" + batchid.getText() + "'");
            if (rs.next()) {
                avbqty = Double.parseDouble(rs.getString("qty"));
            }
        } catch (Exception e) {
        }
        if (!qty.getText().isEmpty()) {
            double d = Double.parseDouble(qty.getText());
            if (avbqty >= d) {
                status.setText("Available");
                status.setForeground(Color.GREEN);
            } else {
                status.setText("Not Available");
                status.setForeground(Color.RED);
            }
        }
    }//GEN-LAST:event_qtyKeyReleased

    private void qtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyActionPerformed
        if (status.getText().equals("Available")) {
            itemdiscount.grabFocus();
        }
    }//GEN-LAST:event_qtyActionPerformed

    private void itemdiscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemdiscountActionPerformed
        double d = Double.parseDouble(itemdiscount.getText());
        double up = Double.parseDouble(price.getText());
        double itemqty = Double.parseDouble(qty.getText());
        DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
        Vector v = new Vector();
        if (d <= 100 & d >= 0) {
            if (dtm.getRowCount() == 0) {
                v.add(itemid.getText());
                v.add(batchid.getText());
                v.add(barcode.getText());
                v.add(name.getText());
                v.add(price.getText());
                v.add(itemqty);
                v.add(d);
                v.add(itemqty * up * (100 - d) / 100);
                dtm.addRow(v);
            } else {
                for (int i = 0; i < dtm.getRowCount(); i++) {
                    if (jTable2.getValueAt(i, 0).equals(itemid.getText()) & jTable2.getValueAt(i, 1).equals(batchid.getText())) {
                        String q = jTable2.getValueAt(i, 5).toString();
                        double finalqty = Double.parseDouble(q) + itemqty;
                        double finaltot = finalqty * up * (100 - d) / 100;
                        jTable2.setValueAt(finalqty, i, 5);
                        jTable2.setValueAt(finaltot, i, 7);
                        break;
                    } else if (i == dtm.getRowCount() - 1) {
                        v.add(itemid.getText());
                        v.add(batchid.getText());
                        v.add(barcode.getText());
                        v.add(name.getText());
                        v.add(price.getText());
                        v.add(itemqty);
                        v.add(d);
                        v.add(itemqty * up * (100 - d) / 100);
                        dtm.addRow(v);
                        break;
                    }
                }
            }
        }
        clear();
   
        calSubTotal();
        // TODO add your handling code here:
    }//GEN-LAST:event_itemdiscountActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        itemid.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        batchid.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        barcode.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
        name.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
        price.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
        jDialog1.setVisible(false);
        qty.grabFocus();
    }//GEN-LAST:event_jTable1MouseClicked

    private void name1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_name1KeyReleased
        try {
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            ResultSet rs;
            if (price1.getText().isEmpty()) {
                rs = MyDB.search("select * from item inner join batch where item.batchid=batch.batchid and  name like '%" + name1.getText() + "%'");
                dtm.setRowCount(0);
                while (rs.next()) {
                    Vector v = new Vector();
                    v.add(rs.getString("itemid"));
                    v.add(rs.getString(2));
                    v.add(rs.getString("barcode"));
                    v.add(rs.getString("name"));
                    v.add(rs.getString("sprice"));
                    dtm.addRow(v);
                }
            } else {
                rs = MyDB.search("select * from item inner join batch where item.batchid=batch.batchid  and sprice='" + price1.getText() + "' and name"
                        + " like '%" + name1.getText() + "%'");
                dtm.setRowCount(0);
                while (rs.next()) {
                    Vector v = new Vector();
                    v.add(rs.getString("itemid"));
                    v.add(rs.getString(2));
                    v.add(rs.getString("barcode"));
                    v.add(rs.getString("name"));
                    v.add(rs.getString("sprice"));
                    dtm.addRow(v);
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_name1KeyReleased

    private void barcodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_barcodeKeyReleased
        if (evt.getKeyCode()==40) {
            invoicediscount.grabFocus();
        }
       
    }//GEN-LAST:event_barcodeKeyReleased

    private void invoicediscountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_invoicediscountKeyReleased

    }//GEN-LAST:event_invoicediscountKeyReleased

    private void invoicediscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoicediscountActionPerformed
        double d=Double.parseDouble(invoicediscount.getText());
        double d2=Double.parseDouble(subtotal.getText());
        nettotal.setText(""+(d2-(d2*d/100)));
        payment.grabFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_invoicediscountActionPerformed

    private void paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentActionPerformed
        double d1=Double.parseDouble(payment.getText());
            double d2=Double.parseDouble(nettotal.getText());
            if(d1>=d2){
                balance.setText(""+(d1-d2));
                balance.grabFocus();
            }
        // TODO add your handling code here:
    }//GEN-LAST:event_paymentActionPerformed

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        Dashboard d=new Dashboard();
        d.setVisible(true);
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_homeActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        int x=jTable2.getSelectedRow();
        DefaultTableModel dtm=(DefaultTableModel)jTable2.getModel();
        dtm.removeRow(x);
        barcode.grabFocus();
        calSubTotal();
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteActionPerformed

    private void balanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_balanceActionPerformed
        try {
            Date d1=new Date();
            String today=new SimpleDateFormat("yyyy-MM-dd").format(d1);
            String s=null;
            ResultSet rs=MyDB.search("select * from login where username='"+name2.getText()+"'");
            if (rs.next()) {
                s=rs.getString("empid");
            }
            MyDB.iud("insert into invoice values('"+invoiceid.getText()+"','"+today+"','"+subtotal.getText()+"','"+invoicediscount.getText()+"',"
                    + "'"+nettotal.getText()+"','"+payment.getText()+"','"+balance.getText()+"','"+s+"')");
            DefaultTableModel dtm=(DefaultTableModel)jTable2.getModel();
            for (int i = 0; i < dtm.getRowCount(); i++) {
                String s1=dtm.getValueAt(i, 5).toString();
                String s2=dtm.getValueAt(i, 6).toString();
                String s3=dtm.getValueAt(i, 7).toString();
                String s4=dtm.getValueAt(i, 0).toString();
                String s5=dtm.getValueAt(i, 1).toString();
                MyDB.iud("insert into invoiceitem (qty,discount,total,invoiceid,itemid,batchid) values('"+s1+"','"+s2+"','"+s3+"',"
                        + "'"+invoiceid.getText()+"','"+s4+"','"+s5+"')");
                MyDB.iud("update item set qty =qty-'"+s1+"' where itemid='"+s4+"' and batchid='"+s5+"'");
            }
            printReport();
            dtm.setRowCount(0);
            subtotal.setText(null);
            payment.setText(null);
            invoicediscount.setText(null);
            nettotal.setText(null);
            balance.setText(null);
            clear();
            
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_balanceActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        DefaultTableModel dtm=(DefaultTableModel)jTable1.getModel();
        dtm.setRowCount(0);
        loadItem();
        name1.setText(null);
        price1.setText(null);
        price1.grabFocus();
       // TODO add your handling code here:
    }//GEN-LAST:event_refreshActionPerformed

    private void qtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyKeyTyped
        if (!(Character.isDigit(evt.getKeyChar()))) {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyKeyTyped

    private void itemdiscountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemdiscountKeyTyped
        if (!(Character.isDigit(evt.getKeyChar()))) {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_itemdiscountKeyTyped

    private void invoicediscountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_invoicediscountKeyTyped
        if (!(Character.isDigit(evt.getKeyChar()))) {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_invoicediscountKeyTyped

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        itemid.setText(jTable3.getValueAt(jTable3.getSelectedRow(), 0).toString());
        batchid.setText(jTable3.getValueAt(jTable3.getSelectedRow(), 1).toString());
        barcode.setText(jTable3.getValueAt(jTable3.getSelectedRow(), 2).toString());
        name.setText(jTable3.getValueAt(jTable3.getSelectedRow(), 3).toString());
        price.setText(jTable3.getValueAt(jTable3.getSelectedRow(), 4).toString());
        jDialog2.setVisible(false);
        qty.grabFocus();
    }//GEN-LAST:event_jTable3MouseClicked


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Invoice().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField balance;
    private javax.swing.JTextField barcode;
    private javax.swing.JTextField batchid;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel date;
    private javax.swing.JButton delete;
    private javax.swing.JButton home;
    private javax.swing.JTextField invoicediscount;
    private javax.swing.JTextField invoiceid;
    private javax.swing.JTextField itemdiscount;
    private javax.swing.JTextField itemid;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField name;
    private javax.swing.JTextField name1;
    private javax.swing.JLabel name2;
    private javax.swing.JTextField nettotal;
    private javax.swing.JTextField payment;
    private javax.swing.JTextField price;
    private javax.swing.JTextField price1;
    private javax.swing.JTextField qty;
    private javax.swing.JButton refresh;
    private javax.swing.JButton search;
    private javax.swing.JTextField status;
    private javax.swing.JTextField subtotal;
    private javax.swing.JLabel time;
    private javax.swing.JLabel type;
    private javax.swing.JLabel type1;
    // End of variables declaration//GEN-END:variables

    private void getInvoiceID() {
        try {
            ResultSet rs= MyDB.search("select count(invoiceid) as x from invoice");
            if (rs.next()) {
                int x=Integer.parseInt(rs.getString("x"));
                ++x;
                invoiceid.setText("INV"+x);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void clear() {
         itemid.setText(null);
        name.setText(null);
        qty.setText(null);
        status.setText(null);
        price.setText(null);
        itemdiscount.setText("0");
        avbqty=Double.parseDouble("0");
        itemid.grabFocus();
        barcode.setText(null);
        batchid.setText(null);
             barcode.grabFocus();
    }
 


    private void loadItem() {
         try {
            DefaultTableModel dtm=(DefaultTableModel)jTable1.getModel();
            ResultSet rs=MyDB.search("select * from item inner join batch where item.batchid=batch.batchid");
            while (rs.next()) {                
                Vector v=new Vector();
                v.add(rs.getString("itemid"));
                v.add(rs.getString(2));
                v.add(rs.getString("barcode"));
                v.add(rs.getString("name"));
                v.add(rs.getString("sprice"));
                dtm.addRow(v);
            }
        } catch (Exception e) {
        }
    }

    private void calSubTotal() {
        DefaultTableModel dtm=(DefaultTableModel)jTable2.getModel();
         double stot=0;
         for (int i = 0; i < dtm.getRowCount(); i++) {
            String s1=dtm.getValueAt(i, 4).toString();
            stot+=Double.parseDouble(s1);
         
         }
         subtotal.setText(""+stot);
    }
    Date d;
    SimpleDateFormat sdf;
    private void setDateAndTime() {
        Timer t=new Timer(1000, new ActionListener() {

            
                public void actionPerformed(ActionEvent e) {
                    d=new Date();
                    sdf=new SimpleDateFormat("yyyy-MM-dd");
                    date.setText(sdf.format(d));
                    sdf=new SimpleDateFormat("HH:mm:ss");
                    time.setText(sdf.format(d));
                }
            });
            t.start();
    }

    private void printReport() {
        try {
            String path="E:\\Bookshop Management System\\Reports\\invoice.jrxml";
            JasperReport jr=JasperCompileManager.compileReport(path);
            HashMap<String,Object>m=new HashMap<>();
            m.put("Invoice ID",invoiceid.getText());
            JasperPrint jp=JasperFillManager.fillReport(jr, m, MyDB.newCon());
         
            JasperPrintManager.printReport(jp, true);
            JasperExportManager.exportReportToPdfFile(jp, "E:/Bookshop Management System/Invoice/"+invoiceid.getText()+".pdf");
        } catch (Exception e) {
        }
    }
    }
   

   
    

